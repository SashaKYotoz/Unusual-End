
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.mcreator.unusualend.init;

import net.minecraft.world.level.block.Block;
import net.minecraft.world.item.Items;
import net.minecraft.world.item.Item;
import net.minecraft.world.item.DoubleHighBlockItem;
import net.minecraft.world.item.BlockItem;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.client.renderer.item.ItemProperties;

import net.mcreator.unusualend.procedures.CrystalCatalystPropertyValueProviderProcedure;
import net.mcreator.unusualend.item.WitherOrbItem;
import net.mcreator.unusualend.item.WarpedWartItem;
import net.mcreator.unusualend.item.WarpedStewItem;
import net.mcreator.unusualend.item.WarpedSquashWedgeItem;
import net.mcreator.unusualend.item.WarpedSpearItem;
import net.mcreator.unusualend.item.WarpedPotionItem;
import net.mcreator.unusualend.item.WarpedInfusionItem;
import net.mcreator.unusualend.item.WarpedBerryItem;
import net.mcreator.unusualend.item.WarpedBalloonItem;
import net.mcreator.unusualend.item.WarpedAnchorItem;
import net.mcreator.unusualend.item.WanderingStewItem;
import net.mcreator.unusualend.item.WanderingPearlItem;
import net.mcreator.unusualend.item.VoidTotemItem;
import net.mcreator.unusualend.item.VoidRuneItem;
import net.mcreator.unusualend.item.VoidMirrorItem;
import net.mcreator.unusualend.item.StabilisedVoidItem;
import net.mcreator.unusualend.item.SpiritViceItem;
import net.mcreator.unusualend.item.SpiritTwistItem;
import net.mcreator.unusualend.item.SpiritSmileItem;
import net.mcreator.unusualend.item.SpiritManiaItem;
import net.mcreator.unusualend.item.SpiritMaliceItem;
import net.mcreator.unusualend.item.SpiritGrimItem;
import net.mcreator.unusualend.item.SpectralSwordItem;
import net.mcreator.unusualend.item.SpectralShovelItem;
import net.mcreator.unusualend.item.SpectralPickaxeItem;
import net.mcreator.unusualend.item.SpectralHoeItem;
import net.mcreator.unusualend.item.SpectralAxeItem;
import net.mcreator.unusualend.item.SpectralAlloyIngotItem;
import net.mcreator.unusualend.item.ShulkerOrbItem;
import net.mcreator.unusualend.item.ShinyGumItem;
import net.mcreator.unusualend.item.ShinyGrenadeItem;
import net.mcreator.unusualend.item.ShinyCrystalItem;
import net.mcreator.unusualend.item.ScrapeClothItem;
import net.mcreator.unusualend.item.ScaleHorseArmorItem;
import net.mcreator.unusualend.item.RawBlukItem;
import net.mcreator.unusualend.item.PrismaticPearlItem;
import net.mcreator.unusualend.item.PrismaticMirrorItem;
import net.mcreator.unusualend.item.PrismaticGumItem;
import net.mcreator.unusualend.item.PrismaliteShardItem;
import net.mcreator.unusualend.item.PrismaliteGemItem;
import net.mcreator.unusualend.item.PhantomArrowItem;
import net.mcreator.unusualend.item.PearlescentUpgradeSmithingTemplateItem;
import net.mcreator.unusualend.item.PearlescentRingItem;
import net.mcreator.unusualend.item.NetherOrbItem;
import net.mcreator.unusualend.item.MusicdiscflyingshipsItem;
import net.mcreator.unusualend.item.MusicDiscQueenItem;
import net.mcreator.unusualend.item.MusicDiscEndstoneGolemThemeItem;
import net.mcreator.unusualend.item.MoultDaggerItem;
import net.mcreator.unusualend.item.LurkerSpineItem;
import net.mcreator.unusualend.item.LurkerSludgeItem;
import net.mcreator.unusualend.item.LeechingWandItem;
import net.mcreator.unusualend.item.InfuserInfosItem;
import net.mcreator.unusualend.item.GolemOrbItem;
import net.mcreator.unusualend.item.GlubBucketItem;
import net.mcreator.unusualend.item.GloopilonSliceItem;
import net.mcreator.unusualend.item.FloatingPouchItem;
import net.mcreator.unusualend.item.FireflyEggItem;
import net.mcreator.unusualend.item.EndermiteMoultItem;
import net.mcreator.unusualend.item.EnderlingScrapItem;
import net.mcreator.unusualend.item.EnderfireflyBucketItem;
import net.mcreator.unusualend.item.EnderblobShieldItem;
import net.mcreator.unusualend.item.EnderStewItem;
import net.mcreator.unusualend.item.EnderScrapeItem;
import net.mcreator.unusualend.item.EndblobBallItem;
import net.mcreator.unusualend.item.EndBlobJellyItem;
import net.mcreator.unusualend.item.DiscFragmentFlyingShipsItem;
import net.mcreator.unusualend.item.CrystalCatalystItem;
import net.mcreator.unusualend.item.CreativeSwiftStrikesItem;
import net.mcreator.unusualend.item.CreativeSerenityItem;
import net.mcreator.unusualend.item.CreativeHealthBoostItem;
import net.mcreator.unusualend.item.CookedBolokFinItem;
import net.mcreator.unusualend.item.CookedBlukItem;
import net.mcreator.unusualend.item.CitrineItem;
import net.mcreator.unusualend.item.CitrineGumItem;
import net.mcreator.unusualend.item.CitrineAmuletItem;
import net.mcreator.unusualend.item.ChorusTeaItem;
import net.mcreator.unusualend.item.ChorusPieItem;
import net.mcreator.unusualend.item.ChorusPetalItem;
import net.mcreator.unusualend.item.ChorusJuiceItemItem;
import net.mcreator.unusualend.item.ChorusHelmetItem;
import net.mcreator.unusualend.item.ChorusFluteItem;
import net.mcreator.unusualend.item.BolokScaleItem;
import net.mcreator.unusualend.item.BolokResearchNotesItem;
import net.mcreator.unusualend.item.BolokFinItem;
import net.mcreator.unusualend.item.BolokBucketItem;
import net.mcreator.unusualend.item.BolokBootsItem;
import net.mcreator.unusualend.item.BlukSkewerItem;
import net.mcreator.unusualend.item.BlukBucketItem;
import net.mcreator.unusualend.item.BlukAuChocolatItem;
import net.mcreator.unusualend.item.BlobStewItem;
import net.mcreator.unusualend.item.BlobLensItem;
import net.mcreator.unusualend.item.AncientSwordItem;
import net.mcreator.unusualend.item.AncientShortbowItem;
import net.mcreator.unusualend.item.AncientShardItem;
import net.mcreator.unusualend.item.AncientArmorTrimSmithingTemplateItem;
import net.mcreator.unusualend.UnusualendMod;
import net.neoforged.api.distmarker.Dist;
import net.neoforged.bus.api.SubscribeEvent;
import net.neoforged.fml.common.Mod;
import net.neoforged.fml.event.lifecycle.FMLClientSetupEvent;
import net.neoforged.neoforge.common.DeferredSpawnEggItem;
import net.neoforged.neoforge.registries.DeferredBlock;
import net.neoforged.neoforge.registries.DeferredHolder;
import net.neoforged.neoforge.registries.DeferredRegister;

@Mod.EventBusSubscriber(bus = Mod.EventBusSubscriber.Bus.MOD, value = Dist.CLIENT)
public class UnusualendModItems {
    public static final DeferredRegister<Item> REGISTRY = DeferredRegister.createItems(UnusualendMod.MODID);
    public static final DeferredHolder<Item, DeferredSpawnEggItem> ENDER_BLOB_SPAWN_EGG = REGISTRY.register("ender_blob_spawn_egg", () -> new DeferredSpawnEggItem(UnusualendModEntities.ENDER_BLOB, -13295268, -16777216, new Item.Properties()));
    public static final DeferredHolder<Item, EndblobBallItem> END_BLOB = REGISTRY.register("end_blob", () -> new EndblobBallItem());
    public static final DeferredHolder<Item, DeferredSpawnEggItem> UNDEAD_ENDERLING_SPAWN_EGG = REGISTRY.register("undead_enderling_spawn_egg", () -> new DeferredSpawnEggItem(UnusualendModEntities.UNDEAD_ENDERLING, -16777216, -6750055, new Item.Properties()));
    public static final DeferredHolder<Item, BlockItem> RAW_PURPUR_BLOCK = block(UnusualendModBlocks.RAW_PURPUR_BLOCK);
    public static final DeferredHolder<Item, DeferredSpawnEggItem> ENDSTONE_TRAPPER_SPAWN_EGG = REGISTRY.register("endstone_trapper_spawn_egg", () -> new DeferredSpawnEggItem(UnusualendModEntities.ENDSTONE_TRAPPER, -131665, -5547578, new Item.Properties()));
    public static final DeferredHolder<Item, BlockItem> INFESTED_END_STONE = block(UnusualendModBlocks.INFESTED_END_STONE);
    public static final DeferredHolder<Item, BlockItem> POLISHED_PURPUR = block(UnusualendModBlocks.POLISHED_PURPUR);
    public static final DeferredHolder<Item, BlockItem> POLISHED_PURPUR_STAIRS = block(UnusualendModBlocks.POLISHED_PURPUR_STAIRS);
    public static final DeferredHolder<Item, BlockItem> POLISHED_PURPUR_SLAB = block(UnusualendModBlocks.POLISHED_PURPUR_SLAB);
    public static final DeferredHolder<Item, BlockItem> CHORUS_ROOTS = block(UnusualendModBlocks.CHORUS_ROOTS);
    public static final DeferredHolder<Item, BlockItem> CHORUS_FUNGUS = block(UnusualendModBlocks.CHORUS_FUNGUS);
    public static final DeferredHolder<Item, BlockItem> FLOWER_POT_CHORUS_FUNGUS = block(UnusualendModBlocks.FLOWER_POT_CHORUS_FUNGUS);
    public static final DeferredHolder<Item, ChorusHelmetItem.Helmet> CHORUS_HELMET = REGISTRY.register("chorus_helmet", () -> new ChorusHelmetItem.Helmet());
    public static final DeferredHolder<Item, EnderStewItem> ENDER_STEW = REGISTRY.register("ender_stew", () -> new EnderStewItem());
    public static final DeferredHolder<Item, DeferredSpawnEggItem> ENDER_FIREFLY_SPAWN_EGG = REGISTRY.register("ender_firefly_spawn_egg", () -> new DeferredSpawnEggItem(UnusualendModEntities.ENDER_FIREFLY, -6590274, -2699937, new Item.Properties()));
    public static final DeferredHolder<Item, EnderScrapeItem> ENDERLING_SCRAP = REGISTRY.register("enderling_scrap", () -> new EnderScrapeItem());
    public static final DeferredHolder<Item, BlockItem> CHISELED_ENDSTONE_BUILDER = block(UnusualendModBlocks.CHISELED_ENDSTONE_BUILDER);
    public static final DeferredHolder<Item, BlockItem> CHISELED_ENDSTONE_US = block(UnusualendModBlocks.CHISELED_ENDSTONE_US);
    public static final DeferredHolder<Item, BlockItem> CHISELED_ENDSTONE_DRAGON = block(UnusualendModBlocks.CHISELED_ENDSTONE_DRAGON);
    public static final DeferredHolder<Item, BlockItem> CHISELED_ENDSTONE_SCARED = block(UnusualendModBlocks.CHISELED_ENDSTONE_SCARED);
    public static final DeferredHolder<Item, BlockItem> CHISELED_ENDSTONE_WORK = block(UnusualendModBlocks.CHISELED_ENDSTONE_WORK);
    public static final DeferredHolder<Item, BlockItem> CHISELED_ENDSTONE_FRIENDSHIP = block(UnusualendModBlocks.CHISELED_ENDSTONE_FRIENDSHIP);
    public static final DeferredHolder<Item, BlockItem> FIREFLY_BULB = block(UnusualendModBlocks.FIREFLY_BULB);
    public static final DeferredHolder<Item, BlockItem> ENDERBLOB_BLOCK = block(UnusualendModBlocks.ENDERBLOB_BLOCK);
    public static final DeferredHolder<Item, BlockItem> TELEPORTATION_ANCHOR = block(UnusualendModBlocks.TELEPORTATION_ANCHOR);
    public static final DeferredHolder<Item, ChorusJuiceItemItem> CHORUS_JUICE = REGISTRY.register("chorus_juice", () -> new ChorusJuiceItemItem());
    public static final DeferredHolder<Item, EnderlingScrapItem.Leggings> SPECTRAL_LEGGINGS = REGISTRY.register("spectral_leggings", () -> new EnderlingScrapItem.Leggings());
    public static final DeferredHolder<Item, BlockItem> WEAK_END_STONE_BRICKS = block(UnusualendModBlocks.WEAK_END_STONE_BRICKS);
    public static final DeferredHolder<Item, DeferredSpawnEggItem> ENDSTONE_GOLEM_SPAWN_EGG = REGISTRY.register("endstone_golem_spawn_egg", () -> new DeferredSpawnEggItem(UnusualendModEntities.ENDSTONE_GOLEM, -103, -10092391, new Item.Properties()));
    public static final DeferredHolder<Item, BlockItem> SHULKER_SHOOTER = block(UnusualendModBlocks.SHULKER_SHOOTER);
    public static final DeferredHolder<Item, MusicdiscflyingshipsItem> MUSIC_DISC_FLYING_SHIPS = REGISTRY.register("music_disc_flying_ships", () -> new MusicdiscflyingshipsItem());
    public static final DeferredHolder<Item, VoidTotemItem> VOID_TOTEM = REGISTRY.register("void_totem", () -> new VoidTotemItem());
    public static final DeferredHolder<Item, BlockItem> GOLEM_ALTAR = block(UnusualendModBlocks.GOLEM_ALTAR);
    public static final DeferredHolder<Item, NetherOrbItem> BLAZING_ORB = REGISTRY.register("blazing_orb", () -> new NetherOrbItem());
    public static final DeferredHolder<Item, BlockItem> SPECTRAL_BLOCK = block(UnusualendModBlocks.SPECTRAL_BLOCK);
    public static final DeferredHolder<Item, EndermiteMoultItem> ENDERBLOB_MOULT = REGISTRY.register("enderblob_moult", () -> new EndermiteMoultItem());
    public static final DeferredHolder<Item, DiscFragmentFlyingShipsItem> DISC_FRAGMENT_FLYING_SHIPS = REGISTRY.register("disc_fragment_flying_ships", () -> new DiscFragmentFlyingShipsItem());
    public static final DeferredHolder<Item, BlockItem> DRAGON_LAMP = block(UnusualendModBlocks.DRAGON_LAMP);
    public static final DeferredHolder<Item, AncientShardItem> ANCIENT_SHARD = REGISTRY.register("ancient_shard", () -> new AncientShardItem());
    public static final DeferredHolder<Item, FloatingPouchItem> FLOATING_POUCH = REGISTRY.register("floating_pouch", () -> new FloatingPouchItem());
    public static final DeferredHolder<Item, BlockItem> PURPUR_TANK = block(UnusualendModBlocks.PURPUR_TANK);
    public static final DeferredHolder<Item, BlockItem> PURPUR_EMBEDDED_END_STONE = block(UnusualendModBlocks.PURPUR_EMBEDDED_END_STONE);
    public static final DeferredHolder<Item, BlockItem> CHORUS_NEST_PLANKS = block(UnusualendModBlocks.CHORUS_NEST_PLANKS);
    public static final DeferredHolder<Item, BlockItem> STRIPPED_CHORUS_NEST_PLANKS = block(UnusualendModBlocks.STRIPPED_CHORUS_NEST_PLANKS);
    public static final DeferredHolder<Item, BlockItem> CHORUS_NEST_STAIRS = block(UnusualendModBlocks.CHORUS_NEST_STAIRS);
    public static final DeferredHolder<Item, BlockItem> STRIPPED_CHORUS_NEST_STAIRS = block(UnusualendModBlocks.STRIPPED_CHORUS_NEST_STAIRS);
    public static final DeferredHolder<Item, BlockItem> CHORUS_NEST_SLAB = block(UnusualendModBlocks.CHORUS_NEST_SLAB);
    public static final DeferredHolder<Item, BlockItem> STRIPPED_CHORUS_NEST_SLAB = block(UnusualendModBlocks.STRIPPED_CHORUS_NEST_SLAB);
    public static final DeferredHolder<Item, BlockItem> FADING_BLOCK = block(UnusualendModBlocks.FADING_BLOCK);
    public static final DeferredHolder<Item, BlockItem> ENDSTONE_TILES = block(UnusualendModBlocks.ENDSTONE_TILES);
    public static final DeferredHolder<Item, WanderingStewItem> WANDERING_STEW = REGISTRY.register("wandering_stew", () -> new WanderingStewItem());
    public static final DeferredHolder<Item, MusicDiscEndstoneGolemThemeItem> MUSIC_DISC_ENDSTONE_GOLEM_THEME = REGISTRY.register("music_disc_endstone_golem_theme", () -> new MusicDiscEndstoneGolemThemeItem());
    public static final DeferredHolder<Item, BlockItem> ENDERBLOB_MOULT_BLOCK = block(UnusualendModBlocks.ENDERBLOB_MOULT_BLOCK);
    public static final DeferredHolder<Item, BlockItem> PHANTOM_MEMBRANE_BLOCK = block(UnusualendModBlocks.PHANTOM_MEMBRANE_BLOCK);
    public static final DeferredHolder<Item, BlockItem> POLISHED_PURPUR_TILES = block(UnusualendModBlocks.POLISHED_PURPUR_TILES);
    public static final DeferredHolder<Item, BlockItem> POLISHED_PURPUR_TILES_STAIRS = block(UnusualendModBlocks.POLISHED_PURPUR_TILES_STAIRS);
    public static final DeferredHolder<Item, BlockItem> POLISHED_PURPUR_TILES_SLAB = block(UnusualendModBlocks.POLISHED_PURPUR_TILES_SLAB);
    public static final DeferredHolder<Item, BlockItem> RAW_PURPUR_BLOCK_STAIRS = block(UnusualendModBlocks.RAW_PURPUR_BLOCK_STAIRS);
    public static final DeferredHolder<Item, BlockItem> RAW_PURPUR_BLOCK_SLAB = block(UnusualendModBlocks.RAW_PURPUR_BLOCK_SLAB);
    public static final DeferredHolder<Item, BlockItem> POLISHED_PURPUR_BRICKS = block(UnusualendModBlocks.POLISHED_PURPUR_BRICKS);
    public static final DeferredHolder<Item, BlockItem> POLISHED_PURPUR_BRICK_STAIRS = block(UnusualendModBlocks.POLISHED_PURPUR_BRICK_STAIRS);
    public static final DeferredHolder<Item, BlockItem> POLISHED_PURPUR_BRICK_SLAB = block(UnusualendModBlocks.POLISHED_PURPUR_BRICK_SLAB);
    public static final DeferredHolder<Item, BlockItem> POLISHED_PURPUR_TILES_LANTERN = block(UnusualendModBlocks.POLISHED_PURPUR_TILES_LANTERN);
    public static final DeferredHolder<Item, DoubleHighBlockItem> CHORUS_NEST_PLANKS_DOOR = doubleBlock(UnusualendModBlocks.CHORUS_NEST_PLANKS_DOOR);
    public static final DeferredHolder<Item, BlockItem> CHORUS_NEST_TRAPDOOR = block(UnusualendModBlocks.CHORUS_NEST_TRAPDOOR);
    public static final DeferredHolder<Item, BlockItem> CHORUS_NEST_MOSAIC = block(UnusualendModBlocks.CHORUS_NEST_MOSAIC);
    public static final DeferredHolder<Item, BlockItem> CHORUS_NEST_MOSAIC_SLAB = block(UnusualendModBlocks.CHORUS_NEST_MOSAIC_SLAB);
    public static final DeferredHolder<Item, BlockItem> CHORUS_NEST_MOSAIC_STAIRS = block(UnusualendModBlocks.CHORUS_NEST_MOSAIC_STAIRS);
    public static final DeferredHolder<Item, BlockItem> CHISELED_POLISHED_PURPUR_TILES = block(UnusualendModBlocks.CHISELED_POLISHED_PURPUR_TILES);
    public static final DeferredHolder<Item, BlockItem> CHORUS_NEST_MOSAIC_FENCE = block(UnusualendModBlocks.CHORUS_NEST_MOSAIC_FENCE);
    public static final DeferredHolder<Item, BlockItem> CHORUS_NEST_FENCE_GATE = block(UnusualendModBlocks.CHORUS_NEST_FENCE_GATE);
    public static final DeferredHolder<Item, DeferredSpawnEggItem> DRAGLING_SPAWN_EGG = REGISTRY.register("dragling_spawn_egg", () -> new DeferredSpawnEggItem(UnusualendModEntities.DRAGLING, -15395820, -3771427, new Item.Properties()));
    public static final DeferredHolder<Item, MoultDaggerItem> BOUNCY_DAGGER = REGISTRY.register("bouncy_dagger", () -> new MoultDaggerItem());
    public static final DeferredHolder<Item, ChorusPetalItem> CHORUS_PETAL = REGISTRY.register("chorus_petal", () -> new ChorusPetalItem());
    public static final DeferredHolder<Item, ScrapeClothItem> SPECTRAL_CLOTH = REGISTRY.register("spectral_cloth", () -> new ScrapeClothItem());
    public static final DeferredHolder<Item, BlockItem> PURPUR_GRASS = block(UnusualendModBlocks.PURPUR_GRASS);
    public static final DeferredHolder<Item, BlockItem> FLOWERING_PURPUR_GRASS = block(UnusualendModBlocks.FLOWERING_PURPUR_GRASS);
    public static final DeferredHolder<Item, BlockItem> ENDSTONE_SPROUTS = block(UnusualendModBlocks.ENDSTONE_SPROUTS);
    public static final DeferredHolder<Item, BlockItem> CHISELED_GLASS = block(UnusualendModBlocks.CHISELED_GLASS);
    public static final DeferredHolder<Item, BlockItem> CHISELED_GLASS_PANE = block(UnusualendModBlocks.CHISELED_GLASS_PANE);
    public static final DeferredHolder<Item, FireflyEggItem> ENDER_FIREFLY_EGG = REGISTRY.register("ender_firefly_egg", () -> new FireflyEggItem());
    public static final DeferredHolder<Item, ChorusPieItem> CHORUS_PIE = REGISTRY.register("chorus_pie", () -> new ChorusPieItem());
    public static final DeferredHolder<Item, BlockItem> ENDERBLOB_MOULT_BRICKS = block(UnusualendModBlocks.ENDERBLOB_MOULT_BRICKS);
    public static final DeferredHolder<Item, BlockItem> RAW_PURPUR_WALL = block(UnusualendModBlocks.RAW_PURPUR_WALL);
    public static final DeferredHolder<Item, BlockItem> POLISHED_RAW_PURPUR_BRICK_WALL = block(UnusualendModBlocks.POLISHED_RAW_PURPUR_BRICK_WALL);
    public static final DeferredHolder<Item, ChorusTeaItem> CHORUS_TEA = REGISTRY.register("chorus_tea", () -> new ChorusTeaItem());
    public static final DeferredHolder<Item, BlockItem> GNEISS = block(UnusualendModBlocks.GNEISS);
    public static final DeferredHolder<Item, EndBlobJellyItem> END_BLOB_JELLY = REGISTRY.register("end_blob_jelly", () -> new EndBlobJellyItem());
    public static final DeferredHolder<Item, BlockItem> WARPED_END_STONE = block(UnusualendModBlocks.WARPED_END_STONE);
    public static final DeferredHolder<Item, BlockItem> GLOOPSTONE = block(UnusualendModBlocks.GLOOPSTONE);
    public static final DeferredHolder<Item, BlockItem> GNEISS_BRICKS = block(UnusualendModBlocks.GNEISS_BRICKS);
    public static final DeferredHolder<Item, BlockItem> POLISHED_GNEISS = block(UnusualendModBlocks.POLISHED_GNEISS);
    public static final DeferredHolder<Item, BlockItem> CHISELED_GNEISS_BRICK = block(UnusualendModBlocks.CHISELED_GNEISS_BRICK);
    public static final DeferredHolder<Item, BlockItem> ENDERMITE_EGGS = block(UnusualendModBlocks.ENDERMITE_EGGS);
    public static final DeferredHolder<Item, BlockItem> CRACKED_ENDERMITE_EGGS = block(UnusualendModBlocks.CRACKED_ENDERMITE_EGGS);
    public static final DeferredHolder<Item, BlockItem> SHINY_GLOOPSTONE = block(UnusualendModBlocks.SHINY_GLOOPSTONE);
    public static final DeferredHolder<Item, BlockItem> GLOOPSTONE_LAMP = block(UnusualendModBlocks.GLOOPSTONE_LAMP);
    public static final DeferredHolder<Item, BlockItem> POLISHED_GLOOPSTONE = block(UnusualendModBlocks.POLISHED_GLOOPSTONE);
    public static final DeferredHolder<Item, BlockItem> GLOOPSTONE_BRICKS = block(UnusualendModBlocks.GLOOPSTONE_BRICKS);
    public static final DeferredHolder<Item, BlockItem> POLISHED_GNEISS_STAIRS = block(UnusualendModBlocks.POLISHED_GNEISS_STAIRS);
    public static final DeferredHolder<Item, BlockItem> POLISHED_GNEISS_SLAB = block(UnusualendModBlocks.POLISHED_GNEISS_SLAB);
    public static final DeferredHolder<Item, BlockItem> GNEISS_BRICK_STAIRS = block(UnusualendModBlocks.GNEISS_BRICK_STAIRS);
    public static final DeferredHolder<Item, BlockItem> GNEISS_BRICK_SLAB = block(UnusualendModBlocks.GNEISS_BRICK_SLAB);
    public static final DeferredHolder<Item, BlockItem> POLISHED_GLOOPSTONE_STAIRS = block(UnusualendModBlocks.POLISHED_GLOOPSTONE_STAIRS);
    public static final DeferredHolder<Item, BlockItem> POLISHED_GLOOPSTONE_SLAB = block(UnusualendModBlocks.POLISHED_GLOOPSTONE_SLAB);
    public static final DeferredHolder<Item, BlockItem> GLOOPSTONE_BRICK_STAIRS = block(UnusualendModBlocks.GLOOPSTONE_BRICK_STAIRS);
    public static final DeferredHolder<Item, BlockItem> GLOOPSTONE_BRICK_SLAB = block(UnusualendModBlocks.GLOOPSTONE_BRICK_SLAB);
    public static final DeferredHolder<Item, BlockItem> GNEISS_BRICK_WALL = block(UnusualendModBlocks.GNEISS_BRICK_WALL);
    public static final DeferredHolder<Item, BlockItem> GLOOPSTONE_BRICK_WALL = block(UnusualendModBlocks.GLOOPSTONE_BRICK_WALL);
    public static final DeferredHolder<Item, DeferredSpawnEggItem> BOLOK_SPAWN_EGG = REGISTRY.register("bolok_spawn_egg", () -> new DeferredSpawnEggItem(UnusualendModEntities.BOLOK, -15059298, -12998000, new Item.Properties()));
    public static final DeferredHolder<Item, BolokScaleItem> BOLOK_SCALE = REGISTRY.register("bolok_scale", () -> new BolokScaleItem());
    public static final DeferredHolder<Item, BolokBootsItem.Chestplate> WARPED_CHESTPLATE = REGISTRY.register("warped_chestplate", () -> new BolokBootsItem.Chestplate());
    public static final DeferredHolder<Item, BolokBootsItem.Boots> WARPED_BOOTS = REGISTRY.register("warped_boots", () -> new BolokBootsItem.Boots());
    public static final DeferredHolder<Item, ShinyCrystalItem> SHINY_CRYSTAL = REGISTRY.register("shiny_crystal", () -> new ShinyCrystalItem());
    public static final DeferredHolder<Item, BlockItem> SHINY_CRYSTAL_BLOCK = block(UnusualendModBlocks.SHINY_CRYSTAL_BLOCK);
    public static final DeferredHolder<Item, BlockItem> BOLOK_SCALE_BLOCK = block(UnusualendModBlocks.BOLOK_SCALE_BLOCK);
    public static final DeferredHolder<Item, GolemOrbItem> GOLEM_ORB = REGISTRY.register("golem_orb", () -> new GolemOrbItem());
    public static final DeferredHolder<Item, ShulkerOrbItem> SHULKER_ORB = REGISTRY.register("shulker_orb", () -> new ShulkerOrbItem());
    public static final DeferredHolder<Item, WitherOrbItem> WITHERING_ORB = REGISTRY.register("withering_orb", () -> new WitherOrbItem());
    public static final DeferredHolder<Item, BlockItem> SHINY_CRYSTAL_TILES = block(UnusualendModBlocks.SHINY_CRYSTAL_TILES);
    public static final DeferredHolder<Item, BlockItem> CHISELED_GLOOPSTONE_BRICKS = block(UnusualendModBlocks.CHISELED_GLOOPSTONE_BRICKS);
    public static final DeferredHolder<Item, BlockItem> WARPED_MOSS = block(UnusualendModBlocks.WARPED_MOSS);
    public static final DeferredHolder<Item, BlockItem> SHINY_CRYSTAL_BRICKS = block(UnusualendModBlocks.SHINY_CRYSTAL_BRICKS);
    public static final DeferredHolder<Item, BlockItem> CHORUS_PETALS_BLOCK = block(UnusualendModBlocks.CHORUS_PETALS_BLOCK);
    public static final DeferredHolder<Item, WarpedPotionItem> WARPED_POTION = REGISTRY.register("warped_potion", () -> new WarpedPotionItem());
    public static final DeferredHolder<Item, WarpedWartItem> WARPED_SPORES = REGISTRY.register("warped_spores", () -> new WarpedWartItem());
    public static final DeferredHolder<Item, BolokBucketItem> BOLOK_BUCKET = REGISTRY.register("bolok_bucket", () -> new BolokBucketItem());
    public static final DeferredHolder<Item, EnderfireflyBucketItem> ENDERFIREFLY_BUCKET = REGISTRY.register("enderfirefly_bucket", () -> new EnderfireflyBucketItem());
    public static final DeferredHolder<Item, BlockItem> DRIPPING_GLOOPSTONE = block(UnusualendModBlocks.DRIPPING_GLOOPSTONE);
    public static final DeferredHolder<Item, BlockItem> GLOOPSLATE = block(UnusualendModBlocks.GLOOPSLATE);
    public static final DeferredHolder<Item, BlockItem> GLOOPY_BUSH = block(UnusualendModBlocks.GLOOPY_BUSH);
    public static final DeferredHolder<Item, BlockItem> SHINY_SPIREA = block(UnusualendModBlocks.SHINY_SPIREA);
    public static final DeferredHolder<Item, BlockItem> BOUNCY_GLOOPSLATE = block(UnusualendModBlocks.BOUNCY_GLOOPSLATE);
    public static final DeferredHolder<Item, BlockItem> GLOOPSTONE_LANTERN = block(UnusualendModBlocks.GLOOPSTONE_LANTERN);
    public static final DeferredHolder<Item, BlockItem> FLOWER_POT_CHORUS_ROOTS = block(UnusualendModBlocks.FLOWER_POT_CHORUS_ROOTS);
    public static final DeferredHolder<Item, BlockItem> FLOWER_POT_SHINY_SPIREA = block(UnusualendModBlocks.FLOWER_POT_SHINY_SPIREA);
    public static final DeferredHolder<Item, BlockItem> HEALING_LANTERN = block(UnusualendModBlocks.HEALING_LANTERN);
    public static final DeferredHolder<Item, BlockItem> POLISHED_GLOOPSLATE = block(UnusualendModBlocks.POLISHED_GLOOPSLATE);
    public static final DeferredHolder<Item, BlockItem> GLOOPSLATE_BRICKS = block(UnusualendModBlocks.GLOOPSLATE_BRICKS);
    public static final DeferredHolder<Item, ShinyGumItem> SHINY_GUM = REGISTRY.register("shiny_gum", () -> new ShinyGumItem());
    public static final DeferredHolder<Item, BolokResearchNotesItem> BOLOK_RESEARCH_NOTES = REGISTRY.register("bolok_research_notes", () -> new BolokResearchNotesItem());
    public static final DeferredHolder<Item, BolokFinItem> BOLOK_FIN = REGISTRY.register("bolok_fin", () -> new BolokFinItem());
    public static final DeferredHolder<Item, CookedBolokFinItem> COOKED_BOLOK_FIN = REGISTRY.register("cooked_bolok_fin", () -> new CookedBolokFinItem());
    public static final DeferredHolder<Item, BlockItem> POLISHED_GLOOPSLATE_SLAB = block(UnusualendModBlocks.POLISHED_GLOOPSLATE_SLAB);
    public static final DeferredHolder<Item, BlockItem> POLISHED_GLOOPSLATE_STAIRS = block(UnusualendModBlocks.POLISHED_GLOOPSLATE_STAIRS);
    public static final DeferredHolder<Item, BlockItem> GLOOPSLATE_BRICKS_SLAB = block(UnusualendModBlocks.GLOOPSLATE_BRICKS_SLAB);
    public static final DeferredHolder<Item, BlockItem> GLOOPSLATE_BRICKS_STAIRS = block(UnusualendModBlocks.GLOOPSLATE_BRICKS_STAIRS);
    public static final DeferredHolder<Item, BlockItem> CHISELED_POLISHED_GLOOPSLATE = block(UnusualendModBlocks.CHISELED_POLISHED_GLOOPSLATE);
    public static final DeferredHolder<Item, BlockItem> GNEISS_PILE = block(UnusualendModBlocks.GNEISS_PILE);
    public static final DeferredHolder<Item, BlockItem> WARPED_ALGAE = block(UnusualendModBlocks.WARPED_ALGAE);
    public static final DeferredHolder<Item, BlockItem> ANCIENT_ENCASED_END_STONE = block(UnusualendModBlocks.ANCIENT_ENCASED_END_STONE);
    public static final DeferredHolder<Item, SpectralAlloyIngotItem> PEARLESCENT_INGOT = REGISTRY.register("pearlescent_ingot", () -> new SpectralAlloyIngotItem());
    public static final DeferredHolder<Item, BlockItem> PEARLESCENT_BLOCK = block(UnusualendModBlocks.PEARLESCENT_BLOCK);
    public static final DeferredHolder<Item, SpectralPickaxeItem> PEARLESCENT_PICKAXE = REGISTRY.register("pearlescent_pickaxe", () -> new SpectralPickaxeItem());
    public static final DeferredHolder<Item, SpectralAxeItem> PEARLESCENT_AXE = REGISTRY.register("pearlescent_axe", () -> new SpectralAxeItem());
    public static final DeferredHolder<Item, SpectralSwordItem> PEARLESCENT_SWORD = REGISTRY.register("pearlescent_sword", () -> new SpectralSwordItem());
    public static final DeferredHolder<Item, SpectralShovelItem> PEARLESCENT_SHOVEL = REGISTRY.register("pearlescent_shovel", () -> new SpectralShovelItem());
    public static final DeferredHolder<Item, SpectralHoeItem> PEARLESCENT_HOE = REGISTRY.register("pearlescent_hoe", () -> new SpectralHoeItem());
    public static final DeferredHolder<Item, BlockItem> WARPED_SQUASH = block(UnusualendModBlocks.WARPED_SQUASH);
    public static final DeferredHolder<Item, BlockItem> GNEISS_PILLAR = block(UnusualendModBlocks.GNEISS_PILLAR);
    public static final DeferredHolder<Item, WarpedSquashWedgeItem> WARPED_SQUASH_WEDGE = REGISTRY.register("warped_squash_wedge", () -> new WarpedSquashWedgeItem());
    public static final DeferredHolder<Item, BlockItem> CARVED_WARPED_SQUASH = block(UnusualendModBlocks.CARVED_WARPED_SQUASH);
    public static final DeferredHolder<Item, BlockItem> VOID_PARTICLES_BLOCK = block(UnusualendModBlocks.VOID_PARTICLES_BLOCK);
    public static final DeferredHolder<Item, AncientSwordItem> ANCIENT_SWORD = REGISTRY.register("ancient_sword", () -> new AncientSwordItem());
    public static final DeferredHolder<Item, DeferredSpawnEggItem> SPUNKLER_SPAWN_EGG = REGISTRY.register("spunkler_spawn_egg", () -> new DeferredSpawnEggItem(UnusualendModEntities.SPUNKLER, -13553268, -655943, new Item.Properties()));
    public static final DeferredHolder<Item, LurkerSludgeItem> LURKER_SLUDGE = REGISTRY.register("lurker_sludge", () -> new LurkerSludgeItem());
    public static final DeferredHolder<Item, LurkerSpineItem> LURKER_SPINE = REGISTRY.register("lurker_spine", () -> new LurkerSpineItem());
    public static final DeferredHolder<Item, StabilisedVoidItem> STABILISED_VOID = REGISTRY.register("stabilised_void", () -> new StabilisedVoidItem());
    public static final DeferredHolder<Item, BlockItem> WARPED_BUBBLE = block(UnusualendModBlocks.WARPED_BUBBLE);
    public static final DeferredHolder<Item, BlockItem> WARPING_WAYSTONE = block(UnusualendModBlocks.WARPING_WAYSTONE);
    public static final DeferredHolder<Item, PrismaliteShardItem> PRISMALITE_SHARD = REGISTRY.register("prismalite_shard", () -> new PrismaliteShardItem());
    public static final DeferredHolder<Item, PrismaliteGemItem> PRISMALITE_GEM = REGISTRY.register("prismalite_gem", () -> new PrismaliteGemItem());
    public static final DeferredHolder<Item, BlockItem> PRISMALITIC_GLOOPSLATE = block(UnusualendModBlocks.PRISMALITIC_GLOOPSLATE);
    public static final DeferredHolder<Item, PrismaticPearlItem> PRISMATIC_PEARL = REGISTRY.register("prismatic_pearl", () -> new PrismaticPearlItem());
    public static final DeferredHolder<Item, BlockItem> PRISMALITE_BLOCK = block(UnusualendModBlocks.PRISMALITE_BLOCK);
    public static final DeferredHolder<Item, WarpedInfusionItem> WARPED_INFUSION = REGISTRY.register("warped_infusion", () -> new WarpedInfusionItem());
    public static final DeferredHolder<Item, BlockItem> GLOOPSLATE_PEDESTRAL = block(UnusualendModBlocks.GLOOPSLATE_PEDESTRAL);
    public static final DeferredHolder<Item, BlockItem> PRISMATIC_PEARL_DISPLAY = block(UnusualendModBlocks.PRISMATIC_PEARL_DISPLAY);
    public static final DeferredHolder<Item, BlockItem> CENTRAL_PEDESTAL = block(UnusualendModBlocks.CENTRAL_PEDESTAL);
    public static final DeferredHolder<Item, PrismaticGumItem> PRISMATIC_GUM = REGISTRY.register("prismatic_gum", () -> new PrismaticGumItem());
    public static final DeferredHolder<Item, CitrineItem> CITRINE_CHUNK = REGISTRY.register("citrine_chunk", () -> new CitrineItem());
    public static final DeferredHolder<Item, BlockItem> CITRINE_BLOCK = block(UnusualendModBlocks.CITRINE_BLOCK);
    public static final DeferredHolder<Item, BlockItem> CITRINE_CLUSTER = block(UnusualendModBlocks.CITRINE_CLUSTER);
    public static final DeferredHolder<Item, BlockItem> CITRINE_BUD = block(UnusualendModBlocks.CITRINE_BUD);
    public static final DeferredHolder<Item, BlockItem> BUDDING_CITRINE = block(UnusualendModBlocks.BUDDING_CITRINE);
    public static final DeferredHolder<Item, BlockItem> LARGE_CITRINE_BUD = block(UnusualendModBlocks.LARGE_CITRINE_BUD);
    public static final DeferredHolder<Item, WarpedSpearItem> WARPED_SPEAR = REGISTRY.register("warped_spear", () -> new WarpedSpearItem());
    public static final DeferredHolder<Item, CitrineGumItem> CITRINE_GUM = REGISTRY.register("citrine_gum", () -> new CitrineGumItem());
    public static final DeferredHolder<Item, CrystalCatalystItem> CRYSTAL_CATALYST = REGISTRY.register("crystal_catalyst", () -> new CrystalCatalystItem());
    public static final DeferredHolder<Item, CitrineAmuletItem> CITRINE_AMULET = REGISTRY.register("citrine_amulet", () -> new CitrineAmuletItem());
    public static final DeferredHolder<Item, BlockItem> CONDENSED_CITRINE_BLOCK = block(UnusualendModBlocks.CONDENSED_CITRINE_BLOCK);
    public static final DeferredHolder<Item, BlockItem> PEARLESCENT_INFUSER = block(UnusualendModBlocks.PEARLESCENT_INFUSER);
    public static final DeferredHolder<Item, VoidRuneItem> VOID_RUNE = REGISTRY.register("void_rune", () -> new VoidRuneItem());
    public static final DeferredHolder<Item, VoidMirrorItem> VOID_MIRROR = REGISTRY.register("void_mirror", () -> new VoidMirrorItem());
    public static final DeferredHolder<Item, BlockItem> CRYSTAL_FLOWER = block(UnusualendModBlocks.CRYSTAL_FLOWER);
    public static final DeferredHolder<Item, BlockItem> SMALL_WARPED_ALGAE = block(UnusualendModBlocks.SMALL_WARPED_ALGAE);
    public static final DeferredHolder<Item, BlockItem> WARPED_SPROUTS = block(UnusualendModBlocks.WARPED_SPROUTS);
    public static final DeferredHolder<Item, BlockItem> WARPED_STONE = block(UnusualendModBlocks.WARPED_STONE);
    public static final DeferredHolder<Item, WarpedBerryItem> WARPED_BERRIES = REGISTRY.register("warped_berries", () -> new WarpedBerryItem());
    public static final DeferredHolder<Item, BlockItem> GLOOPY_TENDRILS = block(UnusualendModBlocks.GLOOPY_TENDRILS);
    public static final DeferredHolder<Item, BlockItem> WARPED_BUSH = block(UnusualendModBlocks.WARPED_BUSH);
    public static final DeferredHolder<Item, BlockItem> GROWN_WARPED_BUSH = block(UnusualendModBlocks.GROWN_WARPED_BUSH);
    public static final DeferredHolder<Item, DeferredSpawnEggItem> GLUB_SPAWN_EGG = REGISTRY.register("glub_spawn_egg", () -> new DeferredSpawnEggItem(UnusualendModEntities.GLUB, -16737895, -39424, new Item.Properties()));
    public static final DeferredHolder<Item, DoubleHighBlockItem> FLOWERING_GLOOPY_PILE = doubleBlock(UnusualendModBlocks.FLOWERING_GLOOPY_PILE);
    public static final DeferredHolder<Item, BlockItem> POLISHED_WARPED_STONE = block(UnusualendModBlocks.POLISHED_WARPED_STONE);
    public static final DeferredHolder<Item, BlockItem> CHISELED_POLISHED_WARPED_STONE = block(UnusualendModBlocks.CHISELED_POLISHED_WARPED_STONE);
    public static final DeferredHolder<Item, BlockItem> WARPED_STONE_BRICKS = block(UnusualendModBlocks.WARPED_STONE_BRICKS);
    public static final DeferredHolder<Item, BlockItem> POLISHED_WARPED_STONE_SLAB = block(UnusualendModBlocks.POLISHED_WARPED_STONE_SLAB);
    public static final DeferredHolder<Item, BlockItem> POLISHED_WARPED_STONE_STAIRS = block(UnusualendModBlocks.POLISHED_WARPED_STONE_STAIRS);
    public static final DeferredHolder<Item, BlockItem> WARPED_STONE_BRICKS_SLAB = block(UnusualendModBlocks.WARPED_STONE_BRICKS_SLAB);
    public static final DeferredHolder<Item, BlockItem> WARPED_STONE_BRICKS_STAIRS = block(UnusualendModBlocks.WARPED_STONE_BRICKS_STAIRS);
    public static final DeferredHolder<Item, BlockItem> WARPED_STONE_TILES = block(UnusualendModBlocks.WARPED_STONE_TILES);
    public static final DeferredHolder<Item, BlockItem> WARPED_STONE_TILES_SLAB = block(UnusualendModBlocks.WARPED_STONE_TILES_SLAB);
    public static final DeferredHolder<Item, BlockItem> WARPED_STONE_TILES_STAIRS = block(UnusualendModBlocks.WARPED_STONE_TILES_STAIRS);
    public static final DeferredHolder<Item, BlobStewItem> BLOB_STEW = REGISTRY.register("blob_stew", () -> new BlobStewItem());
    public static final DeferredHolder<Item, BlockItem> ROOTED_RAW_PURPUR = block(UnusualendModBlocks.ROOTED_RAW_PURPUR);
    public static final DeferredHolder<Item, BlockItem> CHORUS_CANE = block(UnusualendModBlocks.CHORUS_CANE);
    public static final DeferredHolder<Item, BlockItem> BLOOMING_CHORUS_CANE = block(UnusualendModBlocks.BLOOMING_CHORUS_CANE);
    public static final DeferredHolder<Item, BlockItem> CHORUS_CANE_BLOCK = block(UnusualendModBlocks.CHORUS_CANE_BLOCK);
    public static final DeferredHolder<Item, BlockItem> STRIPPED_CHORUS_CANE_BLOCK = block(UnusualendModBlocks.STRIPPED_CHORUS_CANE_BLOCK);
    public static final DeferredHolder<Item, BlockItem> CHORUS_CANE_FLOWER = block(UnusualendModBlocks.CHORUS_CANE_FLOWER);
    public static final DeferredHolder<Item, ChorusFluteItem> CHORUS_FLUTE = REGISTRY.register("chorus_flute", () -> new ChorusFluteItem());
    public static final DeferredHolder<Item, BlockItem> WARPED_LAMP = block(UnusualendModBlocks.WARPED_LAMP);
    public static final DeferredHolder<Item, BlockItem> POLISHED_CITRINE = block(UnusualendModBlocks.POLISHED_CITRINE);
    public static final DeferredHolder<Item, BlockItem> POLISHED_CITRINE_TILES = block(UnusualendModBlocks.POLISHED_CITRINE_TILES);
    public static final DeferredHolder<Item, BlockItem> WARPED_STONE_BRICK_WALL = block(UnusualendModBlocks.WARPED_STONE_BRICK_WALL);
    public static final DeferredHolder<Item, BlockItem> VOID_EXPLOSIVE = block(UnusualendModBlocks.VOID_EXPLOSIVE);
    public static final DeferredHolder<Item, BlockItem> BUILDING_INHIBITOR = block(UnusualendModBlocks.BUILDING_INHIBITOR);
    public static final DeferredHolder<Item, BlockItem> WARPED_LANTERN = block(UnusualendModBlocks.WARPED_LANTERN);
    public static final DeferredHolder<Item, BlockItem> DRAGLING_PLUSH = block(UnusualendModBlocks.DRAGLING_PLUSH);
    public static final DeferredHolder<Item, BlockItem> CITRINE_PILLAR = block(UnusualendModBlocks.CITRINE_PILLAR);
    public static final DeferredHolder<Item, DeferredSpawnEggItem> ENDERBULB_SPAWN_EGG = REGISTRY.register("enderbulb_spawn_egg", () -> new DeferredSpawnEggItem(UnusualendModEntities.ENDERBULB, -13295268, -10283736, new Item.Properties()));
    public static final DeferredHolder<Item, BlobLensItem> ENDERBULB_LENS = REGISTRY.register("enderbulb_lens", () -> new BlobLensItem());
    public static final DeferredHolder<Item, BlockItem> LENS_HARDGLASS = block(UnusualendModBlocks.LENS_HARDGLASS);
    public static final DeferredHolder<Item, DeferredSpawnEggItem> SMALL_ENDERBULB_SPAWN_EGG = REGISTRY.register("small_enderbulb_spawn_egg", () -> new DeferredSpawnEggItem(UnusualendModEntities.SMALL_ENDERBULB, -11851124, -8641478, new Item.Properties()));
    public static final DeferredHolder<Item, BlockItem> SQUASH_O_LANTERN = block(UnusualendModBlocks.SQUASH_O_LANTERN);
    public static final DeferredHolder<Item, BlockItem> WARPED_STONE_PILLAR = block(UnusualendModBlocks.WARPED_STONE_PILLAR);
    public static final DeferredHolder<Item, BlockItem> WARPED_STONE_EMBEDDED_CITRINE = block(UnusualendModBlocks.WARPED_STONE_EMBEDDED_CITRINE);
    public static final DeferredHolder<Item, LeechingWandItem> LEECHING_WAND = REGISTRY.register("leeching_wand", () -> new LeechingWandItem());
    public static final DeferredHolder<Item, ScaleHorseArmorItem> SCALE_HORSE_ARMOR = REGISTRY.register("scale_horse_armor", () -> new ScaleHorseArmorItem());
    public static final DeferredHolder<Item, BlockItem> CRACKED_LENS_HARDGLASS = block(UnusualendModBlocks.CRACKED_LENS_HARDGLASS);
    public static final DeferredHolder<Item, DeferredSpawnEggItem> BLUK_SPAWN_EGG = REGISTRY.register("bluk_spawn_egg", () -> new DeferredSpawnEggItem(UnusualendModEntities.BLUK, -13346172, -9446212, new Item.Properties()));
    public static final DeferredHolder<Item, BlockItem> SMALL_WARPED_SQUASH = block(UnusualendModBlocks.SMALL_WARPED_SQUASH);
    public static final DeferredHolder<Item, RawBlukItem> RAW_BLUK = REGISTRY.register("raw_bluk", () -> new RawBlukItem());
    public static final DeferredHolder<Item, CookedBlukItem> COOKED_BLUK = REGISTRY.register("cooked_bluk", () -> new CookedBlukItem());
    public static final DeferredHolder<Item, BlukAuChocolatItem> BLUK_AU_CHOCOLAT = REGISTRY.register("bluk_au_chocolat", () -> new BlukAuChocolatItem());
    public static final DeferredHolder<Item, GlubBucketItem> GLUB_BUCKET = REGISTRY.register("glub_bucket", () -> new GlubBucketItem());
    public static final DeferredHolder<Item, BlockItem> CITRINE_TOTEM = block(UnusualendModBlocks.CITRINE_TOTEM);
    public static final DeferredHolder<Item, BlukSkewerItem> BLUK_SKEWER = REGISTRY.register("bluk_skewer", () -> new BlukSkewerItem());
    public static final DeferredHolder<Item, BlockItem> GLOOPILON_SEEDS = block(UnusualendModBlocks.GLOOPILON_SEEDS);
    public static final DeferredHolder<Item, BlockItem> GLOOPILON_STEM = block(UnusualendModBlocks.GLOOPILON_STEM);
    public static final DeferredHolder<Item, GloopilonSliceItem> GLOOPILON_SLICE = REGISTRY.register("gloopilon_slice", () -> new GloopilonSliceItem());
    public static final DeferredHolder<Item, BlockItem> CHARGED_GLOOPSTONE = block(UnusualendModBlocks.CHARGED_GLOOPSTONE);
    public static final DeferredHolder<Item, MusicDiscQueenItem> MUSIC_DISC_QUEEN = REGISTRY.register("music_disc_queen", () -> new MusicDiscQueenItem());
    public static final DeferredHolder<Item, BlockItem> SHINY_CRYSTAL_TILES_SLAB = block(UnusualendModBlocks.SHINY_CRYSTAL_TILES_SLAB);
    public static final DeferredHolder<Item, BlockItem> SHINY_CRYSTAL_TILE_STAIRS = block(UnusualendModBlocks.SHINY_CRYSTAL_TILE_STAIRS);
    public static final DeferredHolder<Item, BlukBucketItem> BLUK_BUCKET = REGISTRY.register("bluk_bucket", () -> new BlukBucketItem());
    public static final DeferredHolder<Item, InfuserInfosItem> INFUSER_INFOS = REGISTRY.register("infuser_infos", () -> new InfuserInfosItem());
    public static final DeferredHolder<Item, BlockItem> ENDERBLOB_MOULT_BRICK_STAIRS = block(UnusualendModBlocks.ENDERBLOB_MOULT_BRICK_STAIRS);
    public static final DeferredHolder<Item, BlockItem> ENDERBLOB_MOULT_BRICK_SLAB = block(UnusualendModBlocks.ENDERBLOB_MOULT_BRICK_SLAB);
    public static final DeferredHolder<Item, BlockItem> GLOOPSTONE_TILES = block(UnusualendModBlocks.GLOOPSTONE_TILES);
    public static final DeferredHolder<Item, WarpedAnchorItem> WARPED_ANCHOR = REGISTRY.register("warped_anchor", () -> new WarpedAnchorItem());
    public static final DeferredHolder<Item, PrismaticMirrorItem> PRISMATIC_MIRROR = REGISTRY.register("prismatic_mirror", () -> new PrismaticMirrorItem());
    public static final DeferredHolder<Item, BlockItem> ENDERBLOB_MOULT_WALL = block(UnusualendModBlocks.ENDERBLOB_MOULT_WALL);
    public static final DeferredHolder<Item, WarpedStewItem> WARPED_STEW = REGISTRY.register("warped_stew", () -> new WarpedStewItem());
    public static final DeferredHolder<Item, BlockItem> GLOOPY_URN = block(UnusualendModBlocks.GLOOPY_URN);
    public static final DeferredHolder<Item, PhantomArrowItem> PHANTOM_ARROW = REGISTRY.register("phantom_arrow", () -> new PhantomArrowItem());
    public static final DeferredHolder<Item, WanderingPearlItem> WANDERING_PEARL = REGISTRY.register("wandering_pearl", () -> new WanderingPearlItem());
    public static final DeferredHolder<Item, ShinyGrenadeItem> SHINY_CHARGE = REGISTRY.register("shiny_charge", () -> new ShinyGrenadeItem());
    public static final DeferredHolder<Item, EnderblobShieldItem> ENDERBLOB_SHIELD = REGISTRY.register("enderblob_shield", () -> new EnderblobShieldItem());
    public static final DeferredHolder<Item, PearlescentUpgradeSmithingTemplateItem> PEARLESCENT_UPGRADE_SMITHING_TEMPLATE = REGISTRY.register("pearlescent_upgrade_smithing_template", () -> new PearlescentUpgradeSmithingTemplateItem());
    public static final DeferredHolder<Item, AncientShortbowItem> ANCIENT_SHORTBOW = REGISTRY.register("ancient_shortbow", () -> new AncientShortbowItem());
    public static final DeferredHolder<Item, BlockItem> FLOWER_POT_WARPED_BUSH = block(UnusualendModBlocks.FLOWER_POT_WARPED_BUSH);
    public static final DeferredHolder<Item, BlockItem> FLOWER_POT_CANE = block(UnusualendModBlocks.FLOWER_POT_CANE);
    public static final DeferredHolder<Item, SpiritSmileItem.Helmet> SPIRIT_SMILE_HELMET = REGISTRY.register("spirit_smile_helmet", () -> new SpiritSmileItem.Helmet());
    public static final DeferredHolder<Item, SpiritMaliceItem.Helmet> SPIRIT_MALICE_HELMET = REGISTRY.register("spirit_malice_helmet", () -> new SpiritMaliceItem.Helmet());
    public static final DeferredHolder<Item, SpiritGrimItem.Helmet> SPIRIT_GRIM_HELMET = REGISTRY.register("spirit_grim_helmet", () -> new SpiritGrimItem.Helmet());
    public static final DeferredHolder<Item, SpiritManiaItem.Helmet> SPIRIT_MANIA_HELMET = REGISTRY.register("spirit_mania_helmet", () -> new SpiritManiaItem.Helmet());
    public static final DeferredHolder<Item, SpiritViceItem.Helmet> SPIRIT_VICE_HELMET = REGISTRY.register("spirit_vice_helmet", () -> new SpiritViceItem.Helmet());
    public static final DeferredHolder<Item, SpiritTwistItem.Helmet> SPIRIT_TWIST_HELMET = REGISTRY.register("spirit_twist_helmet", () -> new SpiritTwistItem.Helmet());
    public static final DeferredHolder<Item, BlockItem> CITRINE_CANDLE = block(UnusualendModBlocks.CITRINE_CANDLE);
    public static final DeferredHolder<Item, BlockItem> ANCIENT_PODIUM = block(UnusualendModBlocks.ANCIENT_PODIUM);
    public static final DeferredHolder<Item, PearlescentRingItem> PEARLESCENT_RING = REGISTRY.register("pearlescent_ring", () -> new PearlescentRingItem());
    public static final DeferredHolder<Item, BlockItem> ANCIENT_ENCASED_PURPUR = block(UnusualendModBlocks.ANCIENT_ENCASED_PURPUR);
    public static final DeferredHolder<Item, AncientArmorTrimSmithingTemplateItem> ANCIENT_ARMOR_TRIM_SMITHING_TEMPLATE = REGISTRY.register("ancient_armor_trim_smithing_template", () -> new AncientArmorTrimSmithingTemplateItem());
    public static final DeferredHolder<Item, BlockItem> ENDSTONE_PILLAR = block(UnusualendModBlocks.ENDSTONE_PILLAR);
    public static final DeferredHolder<Item, BlockItem> INFUSED_END_STONE_TILES = block(UnusualendModBlocks.INFUSED_END_STONE_TILES);
    public static final DeferredHolder<Item, BlockItem> BOUNCY_GLOOPSTONE = block(UnusualendModBlocks.BOUNCY_GLOOPSTONE);
    public static final DeferredHolder<Item, BlockItem> WARPED_CHEST = block(UnusualendModBlocks.WARPED_CHEST);
    public static final DeferredHolder<Item, BlockItem> GLOOPILON_BULB = block(UnusualendModBlocks.GLOOPILON_BULB);
    public static final DeferredHolder<Item, WarpedBalloonItem> WARPED_BALLOON = REGISTRY.register("warped_balloon", () -> new WarpedBalloonItem());
    public static final DeferredHolder<Item, BlockItem> CRYSTAL_TORCH = block(UnusualendModBlocks.CRYSTAL_TORCH);
    public static final DeferredHolder<Item, CreativeHealthBoostItem> CREATIVE_HEALTH_BOOST = REGISTRY.register("creative_health_boost", () -> new CreativeHealthBoostItem());
    public static final DeferredHolder<Item, CreativeSwiftStrikesItem> CREATIVE_SWIFT_STRIKES = REGISTRY.register("creative_swift_strikes", () -> new CreativeSwiftStrikesItem());
    public static final DeferredHolder<Item, CreativeSerenityItem> CREATIVE_SERENITY = REGISTRY.register("creative_serenity", () -> new CreativeSerenityItem());
    public static final DeferredHolder<Item, BlockItem> FLOWER_POT_CRYSTAL_FLOWER = block(UnusualendModBlocks.FLOWER_POT_CRYSTAL_FLOWER);
    public static final DeferredHolder<Item, BlockItem> FLOWER_POT_GLOOPY_TENDRILS = block(UnusualendModBlocks.FLOWER_POT_GLOOPY_TENDRILS);
    public static final DeferredHolder<Item, BlockItem> FLOWER_POT_GLOOPY_BUSH = block(UnusualendModBlocks.FLOWER_POT_GLOOPY_BUSH);
    public static final DeferredHolder<Item, BlockItem> FLOWER_POT_PURPUR_GRASS = block(UnusualendModBlocks.FLOWER_POT_PURPUR_GRASS);

    // Start of user code block custom items
    // End of user code block custom items
    private static DeferredHolder<Item, BlockItem> block(DeferredBlock<? extends Block> block) {
        return REGISTRY.register(block.getId().getPath(), () -> new BlockItem(block.get(), new Item.Properties()));
    }

    private static DeferredHolder<Item, DoubleHighBlockItem> doubleBlock(DeferredBlock<? extends Block> block) {
        return REGISTRY.register(block.getId().getPath(), () -> new DoubleHighBlockItem(block.get(), new Item.Properties()));
    }

    @SubscribeEvent
    public static void clientLoad(FMLClientSetupEvent event) {
        event.enqueueWork(() -> {
            ItemProperties.register(CRYSTAL_CATALYST.get(), new ResourceLocation("unusualend:crystal_catalyst_is_renamed"),
                    (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) CrystalCatalystPropertyValueProviderProcedure.execute(itemStackToRender));
            ItemProperties.register(ENDERBLOB_SHIELD.get(), new ResourceLocation("blocking"), ItemProperties.getProperty(Items.SHIELD, new ResourceLocation("blocking")));
        });
    }
}
